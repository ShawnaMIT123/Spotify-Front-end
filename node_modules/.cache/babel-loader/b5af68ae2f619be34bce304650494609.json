{"ast":null,"code":"import { ApiUrl } from '../components/Assets/ApiUrl';\nimport { headers } from '../auth/AuthHeaders';\nimport { UPDATE_AUTHORIZATION, LOGOUT_USER } from './types';\nexport function fetchAuthorization(code) {\n  return function (dispatch) {\n    return fetch(\"\".concat(ApiUrl, \"spotifyusers?code=\").concat(code), {\n      method: 'POST',\n      headers: headers()\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      // Save JWT in local storage, then update auth in store\n      localStorage.setItem('jwt', json.jwt);\n      return dispatch({\n        type: UPDATE_AUTHORIZATION,\n        payload: {\n          user: json.user\n        }\n      });\n    });\n  };\n}\nexport function currentUser() {\n  return function (dispatch) {\n    return fetch(\"\".concat(ApiUrl, \"auth\"), {\n      headers: headers()\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (!json.error) {\n        return dispatch({\n          type: UPDATE_AUTHORIZATION,\n          payload: {\n            user: json\n          }\n        });\n      }\n    });\n  };\n}\nexport function logoutUser() {\n  return {\n    type: LOGOUT_USER\n  };\n}","map":{"version":3,"sources":["/Users/Shawnie/Development/Spotify API Intro/frontend/src/actions/AuthActions.js"],"names":["ApiUrl","headers","UPDATE_AUTHORIZATION","LOGOUT_USER","fetchAuthorization","code","dispatch","fetch","method","then","response","json","localStorage","setItem","jwt","type","payload","user","currentUser","error","logoutUser"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,OAAT,QAAyB,qBAAzB;AACA,SACEC,oBADF,EAEEC,WAFF,QAGO,SAHP;AAKA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOC,KAAK,WAAIP,MAAJ,+BAA+BK,IAA/B,GAAuC;AACjDG,MAAAA,MAAM,EAAE,MADyC;AAEjDP,MAAAA,OAAO,EAAEA,OAAO;AAFiC,KAAvC,CAAL,CAINQ,IAJM,CAID,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAJP,EAKNF,IALM,CAKD,UAAAE,IAAI,EAAI;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,GAAjC;AACA,aAAOR,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAEb,oBAAP;AAA6Bc,QAAAA,OAAO,EAAE;AAACC,UAAAA,IAAI,EAACN,IAAI,CAACM;AAAX;AAAtC,OAAD,CAAf;AACD,KATM,CAAP;AAUD,GAXD;AAYD;AAED,OAAO,SAASC,WAAT,GAAsB;AAC3B,SAAO,UAACZ,QAAD,EAAc;AACnB,WAAOC,KAAK,WAAIP,MAAJ,WAAkB;AAC5BC,MAAAA,OAAO,EAAEA,OAAO;AADY,KAAlB,CAAL,CAGNQ,IAHM,CAGD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAHP,EAINF,IAJM,CAID,UAAAE,IAAI,EAAI;AACZ,UAAI,CAACA,IAAI,CAACQ,KAAV,EAAgB;AACd,eAAOb,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAEb,oBAAP;AAA6Bc,UAAAA,OAAO,EAAE;AAACC,YAAAA,IAAI,EAAEN;AAAP;AAAtC,SAAD,CAAf;AACD;AACF,KARM,CAAP;AASD,GAVD;AAWD;AAED,OAAO,SAASS,UAAT,GAAqB;AAC1B,SAAO;AAACL,IAAAA,IAAI,EAAEZ;AAAP,GAAP;AACD","sourcesContent":["import { ApiUrl } from '../components/Assets/ApiUrl'\nimport { headers }  from '../auth/AuthHeaders'\nimport {\n  UPDATE_AUTHORIZATION,\n  LOGOUT_USER\n} from './types'\n\nexport function fetchAuthorization(code) {\n  return (dispatch) => {\n    return fetch(`${ApiUrl}spotifyusers?code=${code}`, {\n      method: 'POST',\n      headers: headers()\n    })\n    .then(response => response.json())\n    .then(json => {\n      // Save JWT in local storage, then update auth in store\n      localStorage.setItem('jwt', json.jwt)\n      return dispatch({type: UPDATE_AUTHORIZATION, payload: {user:json.user}})\n    })\n  }\n}\n\nexport function currentUser(){\n  return (dispatch) => {\n    return fetch(`${ApiUrl}auth`, {\n      headers: headers()\n    })\n    .then(response => response.json())\n    .then(json => {\n      if (!json.error){\n        return dispatch({type: UPDATE_AUTHORIZATION, payload: {user: json}})\n      }\n    })\n  }\n}\n\nexport function logoutUser(){\n  return {type: LOGOUT_USER}\n}\n"]},"metadata":{},"sourceType":"module"}