{"ast":null,"code":"import _classCallCheck from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Shawnie/Development/Spotify API Intro/frontend/src/components/BrowseBar.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nvar BrowseBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BrowseBar, _Component);\n\n  function BrowseBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BrowseBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BrowseBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      results: _this.props.results\n    };\n\n    _this.resetComponent = function () {\n      return _this.setState({\n        isLoading: false,\n        value: ''\n      });\n    };\n\n    _this.handleResultSelect = function (e, _ref) {\n      var result = _ref.result;\n      fetch(\"http://localhost:3000/api/v1/rooms/1\", {\n        method: 'PATCH',\n        // or 'PUT'\n        body: JSON.stringify(result),\n        // data can be `string` or {object}!\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        debugger;\n        console.log('Success:', JSON.stringify(response));\n        var resultsJSON = response[\"tracks\"].items.map(function (track) {\n          return {\n            \"title\": track.name,\n            \"image\": track.album.images[0].url,\n            \"artist\": track.artists[0].name,\n            \"uri\": track.uri\n          };\n        });\n        console.log(resultsJSON);\n\n        _this.setState({\n          browseResults: resultsJSON\n        });\n\n        _this.props.setSearchResults(resultsJSON);\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BrowseBar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Grid.Column, {\n        width: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Search, Object.assign({\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: function onSearchChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          }, function () {\n            _this2.props.onBrowseChange(_this2.state.value);\n          });\n        },\n        results: this.props.results,\n        value: value\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return BrowseBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.results\n  };\n}\n\nexport default connect(mapStateToProps)(BrowseBar);","map":{"version":3,"sources":["/Users/Shawnie/Development/Spotify API Intro/frontend/src/components/BrowseBar.js"],"names":["React","Component","_","Search","Grid","Header","Segment","connect","BrowseBar","state","results","props","resetComponent","setState","isLoading","value","handleResultSelect","e","result","fetch","method","body","JSON","stringify","headers","then","res","json","response","console","log","resultsJSON","items","map","track","name","album","images","url","artists","uri","browseResults","setSearchResults","catch","error","target","onBrowseChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\n\n\nclass BrowseBar extends Component {\n\n  state={\n    results: this.props.results\n  }\ncomponentWillMount() {\n  this.resetComponent()\n}\n\n\nresetComponent = () => this.setState({ isLoading: false, value: '' })\n\nhandleResultSelect = (e, { result }) => {\n  fetch(\"http://localhost:3000/api/v1/rooms/1\", {\n    method: 'PATCH', // or 'PUT'\n    body: JSON.stringify(result), // data can be `string` or {object}!\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json())\n  .then(response => {\n    debugger\n    console.log('Success:', JSON.stringify(response))\n    let resultsJSON = response[\"tracks\"].items.map((track)=>{\n      return {\"title\": track.name,\n      \"image\": track.album.images[0].url,\n    \"artist\": track.artists[0].name,\n    \"uri\": track.uri}\n    })\n    console.log(resultsJSON)\n\n    this.setState({browseResults: resultsJSON})\n    this.props.setSearchResults(resultsJSON)\n\n})\n  .catch(error => console.error('Error:', error));\n\n\n}\n\n\n\n  render() {\n    const { isLoading, value, results } = this.state\n    console.log(this.props)\n\n    return (\n      <div>\n\n            <Grid>\n              <Grid.Column width={10}>\n\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Search\n                  loading={isLoading}\n                  onResultSelect={this.handleResultSelect}\n                  onSearchChange={(e)=> this.setState({value: e.target.value}, () => {\n                      this.props.onBrowseChange(this.state.value)\n                    })\n                  }\n                  results={this.props.results}\n                  value={value}\n                  {...this.props}\n                />\n              </Grid.Column>\n            </Grid>\n          </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    results: state.results\n  }\n}\n\nexport default connect(mapStateToProps)(BrowseBar);\n"]},"metadata":{},"sourceType":"module"}