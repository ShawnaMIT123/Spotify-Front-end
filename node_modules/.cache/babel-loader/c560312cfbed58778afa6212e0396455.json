{"ast":null,"code":"import _classCallCheck from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Shawnie/Development/Spotify API Intro/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Shawnie/Development/Spotify API Intro/frontend/src/components/BrowseBar.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { headers } from '../auth/AuthHeaders';\nimport { createHTMLImage } from '../ReactLibrary.js';\n\nvar BrowseBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BrowseBar, _Component);\n\n  function BrowseBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BrowseBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BrowseBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      results: _this.props.results\n    };\n\n    _this.resetComponent = function () {\n      return _this.setState({\n        isLoading: false,\n        value: ''\n      });\n    };\n\n    _this.handleResultSelect = function (e, _ref) {\n      var result = _ref.result;\n      fetch(\"http://localhost:3000/api/v1/rooms/1\", {\n        method: 'PATCH',\n        // or 'PUT'\n        body: JSON.stringify(result),\n        // data can be `string` or {object}!\n        headers: headers()\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {// debugger\n        // console.log('Success:', JSON.stringify(response))\n        // let resultsJSON = response[\"tracks\"].items.map((track)=>{\n        //   return {\"title\": track.name,\n        //   \"image\": track.album.images[0].url,\n        // \"artist\": track.artists[0].name,\n        // \"uri\": track.uri}\n        // })\n        // console.log(resultsJSON)\n        //\n        // this.setState({browseResults: resultsJSON})\n        // this.props.setSearchResults(resultsJSON)\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BrowseBar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n\n      var resRender = function resRender(_ref2) {\n        var image = _ref2.image,\n            price = _ref2.price,\n            title = _ref2.title,\n            description = _ref2.description;\n        return [image && React.createElement(\"div\", {\n          key: \"image\",\n          className: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, createHTMLImage(image, {\n          autoGenerateKey: true\n        })), React.createElement(\"div\", {\n          key: \"content\",\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, price && React.createElement(\"div\", {\n          className: \"price\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, price), title && React.createElement(\"div\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, title), description && React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, description))];\n      }; // console.log(this.props)\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Search, Object.assign({\n        aligned: 'right',\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: function onSearchChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          }, function () {\n            _this2.props.onBrowseChange(_this2.state.value);\n          });\n        },\n        results: this.props.results.slice(-10, -1),\n        value: value,\n        placeholder: 'Search by Track...',\n        resultRenderer: resRender\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BrowseBar;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.results\n  };\n}\n\nexport default connect(mapStateToProps)(BrowseBar);","map":{"version":3,"sources":["/Users/Shawnie/Development/Spotify API Intro/frontend/src/components/BrowseBar.js"],"names":["React","Component","_","Search","Grid","Header","Segment","connect","headers","createHTMLImage","BrowseBar","state","results","props","resetComponent","setState","isLoading","value","handleResultSelect","e","result","fetch","method","body","JSON","stringify","then","res","json","response","catch","error","console","resRender","image","price","title","description","autoGenerateKey","target","onBrowseChange","slice","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\nimport {connect} from 'react-redux'\nimport { headers }  from '../auth/AuthHeaders'\nimport {createHTMLImage} from '../ReactLibrary.js'\n\nclass BrowseBar extends Component {\n\n  state={\n    results: this.props.results\n  }\ncomponentWillMount() {\n  this.resetComponent()\n}\n\n\nresetComponent = () => this.setState({ isLoading: false, value: '' })\n\nhandleResultSelect = (e, { result }) => {\n\n  fetch(\"http://localhost:3000/api/v1/rooms/1\", {\n    method: 'PATCH', // or 'PUT'\n    body: JSON.stringify(result), // data can be `string` or {object}!\n    headers: headers()\n  }).then(res => res.json())\n  .then(response => {\n    // debugger\n    // console.log('Success:', JSON.stringify(response))\n    // let resultsJSON = response[\"tracks\"].items.map((track)=>{\n    //   return {\"title\": track.name,\n    //   \"image\": track.album.images[0].url,\n    // \"artist\": track.artists[0].name,\n    // \"uri\": track.uri}\n    // })\n    // console.log(resultsJSON)\n    //\n    // this.setState({browseResults: resultsJSON})\n    // this.props.setSearchResults(resultsJSON)\n\n})\n  .catch(error => console.error('Error:', error));\n\n\n}\n\n\n\n  render() {\n    const { isLoading, value, results } = this.state\n    const resRender = ({ image, price, title, description }) => [\n  image && (\n    <div key='image' className='image'>\n      {createHTMLImage(image, { autoGenerateKey: true })}\n    </div>\n  ),\n  <div key='content' className='content'>\n    {price && <div className='price'>{price}</div>}\n    {title && <div className='title'>{title}</div>}\n    {description && <div className='description'>{description}</div>}\n  </div>\n]\n    // console.log(this.props)\n\n    return (\n\n      <div>\n\n                <Search aligned={'right'}\n                  loading={isLoading}\n                  onResultSelect={this.handleResultSelect}\n                  onSearchChange={(e)=> this.setState({value: e.target.value}, () => {\n                      this.props.onBrowseChange(this.state.value)\n                    })\n                  }\n                  results={this.props.results.slice(-10, -1)}\n                  value={value}\n                  placeholder={'Search by Track...'}\n                  resultRenderer={resRender}\n                  {...this.props}\n                />\n\n          </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    results: state.results\n  }\n}\n\nexport default connect(mapStateToProps)(BrowseBar);\n"]},"metadata":{},"sourceType":"module"}