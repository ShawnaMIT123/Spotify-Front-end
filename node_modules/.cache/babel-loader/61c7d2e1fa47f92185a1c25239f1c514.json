{"ast":null,"code":"import { ApiUrl } from '../components/Assets/ApiUrl';\nimport { headers } from '../auth/AuthHeaders';\nimport { UPDATE_AUTHORIZATION, LOGOUT_USER } from './types'; // export function fetchAuthorization(code) {\n//   return (dispatch) => {\n//     // return fetch(`${ApiUrl}spotifyusers?code=${code}`, {\n//       method: 'POST',\n//       headers: headers()\n//     })\n//     .then(response => response.json())\n//     .then(json => {\n//       // Save JWT in local storage, then update auth in store\n//       localStorage.setItem('jwt', json.jwt)\n//       return dispatch({type: UPDATE_AUTHORIZATION, payload: {user:json.user}})\n//     })\n//   }\n// }\n\nexport function currentUser() {\n  return function (dispatch) {\n    return fetch(\"\".concat(ApiUrl, \"auth\"), {\n      headers: headers()\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (!json.error) {\n        return dispatch({\n          type: UPDATE_AUTHORIZATION,\n          payload: {\n            user: json\n          }\n        });\n      }\n    });\n  };\n}\nexport function logoutUser() {\n  return {\n    type: LOGOUT_USER\n  };\n}","map":{"version":3,"sources":["/Users/Shawnie/Development/Spotify API Intro/frontend/src/actions/AuthActions.js"],"names":["ApiUrl","headers","UPDATE_AUTHORIZATION","LOGOUT_USER","currentUser","dispatch","fetch","then","response","json","error","type","payload","user","logoutUser"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,OAAT,QAAyB,qBAAzB;AACA,SACEC,oBADF,EAEEC,WAFF,QAGO,SAHP,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,GAAsB;AAC3B,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOC,KAAK,WAAIN,MAAJ,WAAkB;AAC5BC,MAAAA,OAAO,EAAEA,OAAO;AADY,KAAlB,CAAL,CAGNM,IAHM,CAGD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAHP,EAINF,IAJM,CAID,UAAAE,IAAI,EAAI;AACZ,UAAI,CAACA,IAAI,CAACC,KAAV,EAAgB;AACd,eAAOL,QAAQ,CAAC;AAACM,UAAAA,IAAI,EAAET,oBAAP;AAA6BU,UAAAA,OAAO,EAAE;AAACC,YAAAA,IAAI,EAAEJ;AAAP;AAAtC,SAAD,CAAf;AACD;AACF,KARM,CAAP;AASD,GAVD;AAWD;AAED,OAAO,SAASK,UAAT,GAAqB;AAC1B,SAAO;AAACH,IAAAA,IAAI,EAAER;AAAP,GAAP;AACD","sourcesContent":["import { ApiUrl } from '../components/Assets/ApiUrl'\nimport { headers }  from '../auth/AuthHeaders'\nimport {\n  UPDATE_AUTHORIZATION,\n  LOGOUT_USER\n} from './types'\n\n// export function fetchAuthorization(code) {\n//   return (dispatch) => {\n//     // return fetch(`${ApiUrl}spotifyusers?code=${code}`, {\n//       method: 'POST',\n//       headers: headers()\n//     })\n//     .then(response => response.json())\n//     .then(json => {\n//       // Save JWT in local storage, then update auth in store\n//       localStorage.setItem('jwt', json.jwt)\n//       return dispatch({type: UPDATE_AUTHORIZATION, payload: {user:json.user}})\n//     })\n//   }\n// }\n\nexport function currentUser(){\n  return (dispatch) => {\n    return fetch(`${ApiUrl}auth`, {\n      headers: headers()\n    })\n    .then(response => response.json())\n    .then(json => {\n      if (!json.error){\n        return dispatch({type: UPDATE_AUTHORIZATION, payload: {user: json}})\n      }\n    })\n  }\n}\n\nexport function logoutUser(){\n  return {type: LOGOUT_USER}\n}\n"]},"metadata":{},"sourceType":"module"}